// mock/course-code-rules.ts
var mockCodeRules = [
  {
    id: "1",
    name: "\u8BA1\u7B97\u673A\u4E13\u4E1A\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219",
    prefix: "CS",
    startSerialNumber: 1001,
    currentSerialNumber: 1045,
    serialNumberLength: 3,
    courseNature: "\u4E13\u4E1A\u5FC5\u4FEE\u8BFE",
    department: "\u8BA1\u7B97\u673A\u79D1\u5B66\u4E0E\u6280\u672F\u5B66\u9662",
    courseCategory: "\u4E13\u4E1A\u57FA\u7840\u8BFE",
    courseType: "\u7406\u8BBA\u8BFE",
    examType: "\u8003\u8BD5",
    courseAttr: "\u5B66\u4F4D\u8BFE",
    credit: 4,
    isActive: true,
    createTime: "2023-01-15 08:30:00",
    updateTime: "2023-03-20 14:22:30",
    components: [
      {
        order: 1,
        type: "department",
        codeType: "system",
        digitType: "prefix",
        digitCount: 2
      },
      {
        order: 2,
        type: "courseNature",
        codeType: "system",
        digitType: "suffix",
        digitCount: 1
      },
      {
        order: 3,
        type: "serialNumber",
        codeType: "system",
        digitType: "suffix",
        digitCount: 3
      }
    ],
    description: "\u8BA1\u7B97\u673A\u4E13\u4E1A\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219"
  },
  {
    id: "2",
    name: "\u7535\u5B50\u4FE1\u606F\u5DE5\u7A0B\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219",
    prefix: "EE",
    startSerialNumber: 2001,
    currentSerialNumber: 2023,
    serialNumberLength: 3,
    courseNature: "\u4E13\u4E1A\u9009\u4FEE\u8BFE",
    department: "\u7535\u5B50\u4FE1\u606F\u5DE5\u7A0B\u5B66\u9662",
    courseCategory: "\u4E13\u4E1A\u65B9\u5411\u8BFE",
    courseType: "\u5B9E\u9A8C\u8BFE",
    examType: "\u8003\u67E5",
    courseAttr: "\u975E\u5B66\u4F4D\u8BFE",
    credit: 2,
    isActive: true,
    createTime: "2023-01-15 09:15:00",
    updateTime: "2023-02-28 11:30:45",
    components: [
      {
        order: 1,
        type: "department",
        codeType: "system",
        digitType: "prefix",
        digitCount: 2
      },
      {
        order: 2,
        type: "courseType",
        codeType: "system",
        digitType: "suffix",
        digitCount: 1
      },
      {
        order: 3,
        type: "serialNumber",
        codeType: "system",
        digitType: "suffix",
        digitCount: 3
      }
    ],
    description: "\u7535\u5B50\u4FE1\u606F\u5DE5\u7A0B\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219"
  }
];
var course_code_rules_default = [
  // 获取课程代码规则列表
  {
    url: "/api/course-code-rules",
    method: "get",
    response: ({ query }) => {
      const { current = 1, pageSize = 10 } = query;
      const startIndex = (Number(current) - 1) * Number(pageSize);
      const endIndex = startIndex + Number(pageSize);
      const list = mockCodeRules.slice(startIndex, endIndex);
      return {
        code: 0,
        data: {
          list,
          total: mockCodeRules.length
        }
      };
    }
  },
  // 获取单个课程代码规则详情
  {
    url: "/api/course-code-rules/:id",
    method: "get",
    response: ({ query }) => {
      const { id } = query;
      const rule = mockCodeRules.find((item) => item.id === id);
      if (!rule) {
        return {
          code: 1,
          message: "\u672A\u627E\u5230\u5BF9\u5E94\u7684\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219"
        };
      }
      return {
        code: 0,
        data: rule
      };
    }
  },
  // 创建课程代码规则
  {
    url: "/api/course-code-rules",
    method: "post",
    response: ({ body }) => {
      const newId = `${mockCodeRules.length + 1}`;
      const newRule = {
        ...body,
        id: newId,
        createTime: (/* @__PURE__ */ new Date()).toISOString().replace("T", " ").substring(0, 19),
        updateTime: (/* @__PURE__ */ new Date()).toISOString().replace("T", " ").substring(0, 19)
      };
      mockCodeRules.push(newRule);
      return {
        code: 0,
        data: {
          ...newRule
        }
      };
    }
  },
  // 更新课程代码规则
  {
    url: "/api/course-code-rules/:id",
    method: "put",
    response: ({ query, body }) => {
      const { id } = query;
      const index = mockCodeRules.findIndex((item) => item.id === id);
      if (index === -1) {
        return {
          code: 1,
          message: "\u672A\u627E\u5230\u5BF9\u5E94\u7684\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219"
        };
      }
      const updatedRule = {
        ...mockCodeRules[index],
        ...body,
        updateTime: (/* @__PURE__ */ new Date()).toISOString().replace("T", " ").substring(0, 19)
      };
      mockCodeRules[index] = updatedRule;
      return {
        code: 0,
        data: updatedRule
      };
    }
  },
  // 删除课程代码规则
  {
    url: "/api/course-code-rules/:id",
    method: "delete",
    response: ({ query }) => {
      const { id } = query;
      const index = mockCodeRules.findIndex((item) => item.id === id);
      if (index === -1) {
        return {
          code: 1,
          message: "\u672A\u627E\u5230\u5BF9\u5E94\u7684\u8BFE\u7A0B\u4EE3\u7801\u89C4\u5219"
        };
      }
      mockCodeRules.splice(index, 1);
      return {
        code: 0,
        data: {
          id
        }
      };
    }
  }
];
export {
  course_code_rules_default as default
};
//# sourceMappingURL=data:application/json;base64,
